
兼容包的理解：当系统的新版本发布后，因为新的api必须运行在新版本的系统上才有体现，但是开发者也想在低版本的系统中使用上这令人激动的功能，
毕竟用户的系统更新也许需要等待很久很久的时间。google为了让低版本系统上能运行这功能，额外写了兼容包，所以新版本系统的release，往往伴随着support包的发布，
support包的功能就是利用低版本的api，实现与新版本一样的功能。

kitkat 4.4 - 19

1. NFC
2. SAF 存储访问框架。 
open_document，实现DocumentProvider，借助系统UI实现选择图片，还可以暴露自己的文档。需要禁止4.3的访问方式

4.3或者以下，需要禁止掉 saf的provider，然后允许


3. 沉浸式体验。透明状态栏和导航栏。

4. chromnWebview webview基于chronm内核

5. 开发过程中添加录屏功能，在sdk的工具中adb shell screenrecord	提供支持

6. 音视频功能
一、添加了无缝切换分辨率功能
二、DASH加密
三、http直播流 HLS的支持更新


7.ndk方面
renderscript性能提升，gpu加速

8.图形
surfaceFlinger 从openGl ES1.0 -> openGL ES2.0

9.连接方面
提供了红外支持
蓝牙功能增强
WIFI直连，同个wifi网络的设备间可以直接传送数据。



---------------------------------------------------------------------------------



Lollipop 5.0 - 5.1变更和优化  21-22  （堪称最大更新）

1. Material Design的引入

2. 性能
切换运行时从dalvik -> ART，预先编译 AOT -> ART（jit提供函数预编译和缓存）
64位架构支持

3. 通知
可以在锁屏时弹通知，并提供一些控件
在通知中增加控件按钮，可以 migrate from remoteview to notification
从NotificationBuilder中添加震动和声音。取消在代码中调用Vibrator和MediaPlayer

4. 连接

蓝牙功能增强

网络状态访问？？？

nfc行为变更，可以动态注册应用id

5. 图形
opengl es 3.1支持

6. 相机
全新的CAMERA api

7. 屏幕录制和共享
？？？这么牛逼？？

8. webview
支持webRTC、webaudio、webGL支持。

9. JobScheduling添加
。。这里才引入吗？

10. getRecentTasks
安全起见，用AMS.getRecentTasks废弃查询当前的用户使用程序，如果查询自己的，可以用getAppTask

11. 绑定服务
bindService 必须显示指定，不允许隐式了，也不要为服务添加隐式拦截filter了。 -- important

12. 自定义权限
申明的自定义权限必须全局唯一，除非是签名相同的应用之间

13.TSL/SSL配置变更
1.加密套件增加了AES-GCM
2. 启用了 TSL1.1 和 TSL1.2

14. 多 SIM 卡支持


15. 网络Api
完全移除 org.apache.http 类和 android.net.http.AndroidHttpClient 类，建议改用URLConnection






------------------------------------

Android 6.0 -- Android M   23

1. 运行时权限
以前的应用直接装就ok了，权限会全被授予。6.0以后，安装不要求任何权限，全部改到运行时了，由用户一个个去授予。引入权限组的概念，同属在dangerous的具体权限组，用户授予了权限，下次申请同一个组的其他权限会自动被授予。

2. 指纹身份认证

3. 确认身份凭据
有时候一些应用安全性比较高的用户，比如微信的支付钱包进入，可以设置多长时间免掉输入锁屏密码或者其他身份认证流程。或者可以监听锁屏时间这些操作来确认身份凭据。

4. 通知更改
添加通知icon

5. ColorStateList 主题属性

6. 相机
闪光灯api添加，可以在不打开相机设备的情况下打开或关闭闪光灯的火炬模式

camera2 api进行了部分扩展

7. 低电量模式和应用待机模式  ---   important ---------------------------------

都是基于没有插上电源的情况

低电耗模式：
用户熄灭屏幕、且静止一段时间，会进入低电耗模式。

该模式下：
1. 暂停 Job 调度、同步
2. 网络访问
3. 忽略wake lock。cpu没法工作？

进入该模式后，会抽点时间退出该模式，执行上面一些任务，然后又会继续进入低电耗模式。


应用待机模式：
更严格的模式，你的应用如果一段时间没有被用户操作，基本就废了，限制进行网络访问，大概一天一次的频率允许其访问网络。

应用在通知栏有通知，通过其他手段让应用处于前台进程，就可以避免进入这种模式。

插上电源就会释放出来，可以正常操作。


8. 网络变更 
取消apache httpclient 的支持，请迁移到 UrlConnection

openSSL迁移到 boringSSL，在jni调用openssl的需要注意，可以调用java的，不要引入openssl第三方库，有可能引起异常


9. 校验apk更严格
如果在 apk 包中的 manifest文件在apk中并不存在，该apk被视为已破坏

10。运行时 ART的一些修改
1. 正确实现了newInstance了，只要兼容包跟着更新，以前的版本也不会有什么问题

11. 相机改了一些服务，但没用过

12. 密钥库的一些更改：
停用或重置安全锁定屏幕时（例如，由用户或设备管理员执行此类操作时），系统将不再删除需要闲时加密的密钥，但在上述事件期间会删除需要闲时加密的密钥。

--------------------------------------------------


Android 7.0 -- Android N

Android 8.0 -- Android O


Android 9.0 -- Android P