okhttp代理：

1. 隧道连接在okhttp中用http协议来传输ssl数据，隧道连接让代理服务器向目标服务器建立tcp连接，如果需要验证的话，让客户端进行验证，验证成功后，成功建立tcp连接。
过程：
1. 客户端发送connect命令，请求头携带host和Proxy-Connection指令
2. 代理端如果有验证的话，让客户端验证，客户端从新发送connect指令并且携带验证头
3. 代理段向目标服务器建立TCP连接，如果成功后，返回200给客户端，至此，隧道建立完毕。
4. 因为隧道是盲转发的，不会对内容进行校验，代理端收到什么，都会直接发送给服务端。又因为是底层TCP连接，可以在隧道的基础上，通过隧道，与目标服务器进行TSL握手。

代理是指对某个协议的请求进行代理，比如对http协议、socks代理。而不是对指定某个服务器域名进行该域名的代理。
有代理后，发送的某种协议的代理就会生效，比如建立http协议，制定需要用代理的情况下，就向http代理服务器建立连接。可以排除某部分域名，采取直连不用代理

tsl握手：

在okhttpclient创建的时候，有个默认的连接配置。即https的连接配置和普通的非tsl连接配置。


1. 代理、负载均衡
2. 缓存机制，DisLruCache
3. socket和websocket
4. 线程池复用，streamAllocation多路复用机制
5. okio
6. https、ssl、证书、handsake、隧道Tunnel、TSL握手
7. 用socket发送http协议的实现方式：httpCodec
8. 拦截器、Builder、装饰者模式
9. okhttp工作流程


网络 + 数据结构、算法 + 设计模式、面向对象思维、UML图 + gradle工具 + Android(组件化+热修复+音视频+高并发) + Java + 数据库 + MVVM数据驱动模式

java后台

小程序

react

1. 你所拥有的知识不在于你记得多少，而是在关键的时刻能否回忆起来。//为知识建立体系，丰富线索，抽象知识的通用性，牵一发而动全身
2. 学习密度和专注力
3. 知其所以然  -- 对于算法的理解，如果只是感叹那寥寥数行精妙绝伦的代码，而不认真想清楚是如何推导这个算法的过程，很可能只是沉迷于表面的认知。注重一个算法，一个解决方案的思考过程
3. 回忆起来的知识是否能解决眼前的问题或推测出解决方法才是知识的质量


1. 单一职责原则
2. 迪米特法则
3. 依赖倒置原则
4. 里氏替换法则
5. 接口隔离
6. 开闭原则




行为型：

代理模式

观察者模式

策略模式

模板方法

适配器模式
一般对于已有完整类结构的类进行它没有的接口适配。
1. 类适配器
直接实现接口，让该类具备该接口的能力

2. 对象适配器

装饰器模式
通过组合的方式将待装饰的对象封装起来，然后添加扩展方法，增强能力

命令模式

外观模式

中介模式

桥接模式

建造者模式（Builder模式）

享元设计模式


备忘录模式  -- 黑箱备忘录，通过内部类来隐藏宽接口，暴露空接口给负责管理备忘录的类，备忘录实现了空接口，如此一来在恢复备忘录时，能够借助内部类来讲空接口转变成内部类，从而让其他非此备忘录的类获取到该备忘录。

迭代器设计模式

职责链模式

状态模式

访问者模式

原型设计模式



构造型：

单例模式

简单工厂

工厂方法

抽象工厂




吃鸡建模：


角色：

外观：
可以穿披风、墨镜、帽子、裤子、鞋子、上衣。 只能有一件，但是有多种款式可以选择


枪：3把枪，其中两把是大枪、另外一把是手枪

狙击枪：m24，AWM，kar98, mini, win94

步枪: scale-L、m16A4,m416,qbz,gza...


背包： 3级包、2级包、1级包

头盔：3级头、2级头（两种颜色）、1级头（摩托车头盔、西瓜）

甲：3级甲、2级甲、1级甲

速度加成： 能量物品：止痛药、可乐、肾上腺素

血量恢复： 急救包、医疗箱、止痛药、绷带、可乐 + 耗时

瞄准镜：红点全息、2倍镜、3倍、4倍、6倍、8倍、15倍

配件：
枪口：抑制器、消音、补偿
瞄镜
枪托：托腮板
弹夹：双弹夹、扩容，快速弹夹
握把：三角、垂直
子弹袋：枪射击之后上扬幅度-30%

但是不是每把枪都可以装全部配件、另外有一些配件只适合某部分枪

皮肤

地图刷物品：


枪配子弹、

车： 吉普、法拉利、摩托、蹦蹦、小车、大巴



圈的设计





物品：可捡物品、不可捡物品

物品：名字、渲染能力、可以被显示在背包里（负重）

皮肤都是采用策略模式，渲染的策略是当角色捡起该枪的时候，检查人是否有该枪的皮肤，如果有，将皮肤策略
赋值给枪，枪在渲染的时候就会出现不同的样式。而枪默认有一个原始的渲染策略。
这也就是为什么枪被人捡起后又丢下，另外一个人捡起后样式仍然带皮肤的。因为每把枪在一场游戏中是唯一的，赋值了策略，在丢弃后并没有还原原来的，目的是。你懂的，勾引大家购买。


